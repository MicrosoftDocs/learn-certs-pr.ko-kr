### YamlMime:Course
title: Introduction to Python
metadata:
  title: 'Course 55284-A: Introduction to Python'
  description: 'Course 55284-A: Introduction to Python'
uid: course.55284
courseNumber: '55284-A'
hoursToComplete: 96
iconUrl: /media/learn/certification/course.svg
skillsGained:
- skill: Python 의 작동 방식과 무엇이 좋은지 이해합니다.
- skill: 프로그래밍 언어의 세계에서 Python의 위치를 이해합니다.
- skill: Python에서 문자열로 작업하고 조작합니다.
- skill: Python으로 수학 연산을 수행합니다.
- skill: 'Python 시퀀스로 작업합니다: 목록, 배열, 사전 및 세트.'
- skill: 사용자 입력 및 출력 결과를 수집합니다.
- skill: Python에서 흐름 제어 처리를 수행합니다. 
- skill: Python을 사용하여 파일에 쓰고 읽습니다. 
- skill: Python에서 함수를 작성합니다. 
- skill: Python에서 예외를 처리합니다.
- skill: Python에서 날짜와 시간으로 작업합니다.
learningPartnersLink: /learn/certifications/partners
locales:
- en
levels:
- beginner
roles:
- developer
summary: |-
  이 4-일 Python 교육 과정에서, 학생들은 Python에서 프로그래밍하는 방법을 배웁니다. 이 과정은 다른 프로그래밍 언어에 대한 경험이 있거나 경험이 없는 언어를 처음 접하는 학생들을 대상으로 합니다. 
  이 Python 과정은 Python 3를 사용하여 진행됩니다; 그러나, Python 2와 Python 3사이의 차이점이 있습니다. 개인 Python 수업은, 원하는 경우 강사가 특별히 Python 2에 집중할 수 있습니다.

  #### 구독자 프로필
  이 과정은 Python을 배우려고 하는 학생들을 대상으로 합니다. 일부 프로그래밍 경험은 도움이 되지만 요구되지는 않습니다.
prerequisitesSection: |-
  일부 프로그래밍 경험은 도움이 되지만, 요구되지는 않습니다.
outlineSection: |-
  ### 모듈 1&#58; Python 기초
  1991년에 처음 등장한 Python은, 가장 많이 사용되는 프로그래밍 언어 중 하나입니다. Python은 고-수준 프로그래밍 언어로, 그것은 Python 해석 프로그램에 의해 컴퓨터가 이해할 수 있는 언어로 번역되는, 비교적 사람이 읽을 수 있는 문법을 사용합니다. 많이 사용되는 고-수준 프로그래밍 언어의 예로는 C#, Objective-C, Java, PHP, 그리고 JavaScript가 있습니다. 흥미롭게도, 이런 다른 모든 언어는, Python 과는 달리, C와 유사한 문법을 공유합니다. 이러한 언어 중 하나 이상을 사용하는 경우, Python의 문법이 약간 이상하게 생각될 수 있습니다. 그러나 약간의 시간을 주십시오. 프로그래머에게 매우 친숙하다는 것을 알게 될 것입니다. 

  #### 레슨
  - Python 실행하기
  - 안녕, 세상!
  - 문자
  - Python 주석
  - 변수
  - Python 모듈 작성하기
  - () 함수 인쇄
  - 사용자 입력 수집하기
  - 도움 받기


  #### 랩 &#58; 이 레슨의 연습
  - 안녕, 세상
  - 유형 탐색하기
  - 간단한 Python 스크립트

  이 모듈을 완료 후, 학생들은 다음을 할 수 있게 됩니다&#58;
  - Python이 작동하는 방법을 이해합니다.
  - 프로그래밍 언어의 세계에서 Python의 위치를 이해합니다. 
  - Python 3.x와 Python 2.x 간의 차이점을 이해합니다. 
  - 변수와 Python의 데이터 유형을 이해합니다.
  - 간단한 모듈을 만듭니다.
  - Python에 대한 도움을 받습니다. 


  ### 모듈 2&#58; 함수와 모듈
  이 모듈은 함수와 모듈로 작업하는 방법을 설명합니다.
  #### 레슨
  - 함수 정의하기
  - 가변 범위
  - 글로벌 변수
  - 함수 매개 변수
  - 반환 값
  - 모듈 가져오기


  #### 랩 &#58; 이 레슨의 연습
  - 매개 변수가 있는 함수
  - 기본값이 있는 매개 변수

  이 모듈을 완료 후, 학생들은 다음을 할 수 있게 됩니다&#58;
  - 함수를 정의하고 호출합니다.
  - 함수에 대한 전달 인수에서 매개 변수를 정의합니다.
  - 매개 변수의 기본값을 설정합니다.
  - 가변 범위를 이해합니다.
  - 함수로부터 값을 반환합니다.
  - 모듈을 만들고 가져옵니다.


  ### 모듈 3&#58; 수학
  Python은 확장된 수학 (및 관련된) 기능을 제공하는 몇 가지 기본-제공 수학 함수와 몇 가지 추가 기본-제공 라이브러리를 포함합니다. 이 레슨에서는, 기본-제공 함수와 수학 및 랜덤 라이브러리를 다룰 것입니다.

  #### 레슨
  - 산술 연산자
  - 지정 연산자
  - 기본-제공 수학 함수
  - 수학 모듈
  - 랜던 모듈


  #### 랩 &#58; 이 레슨의 연습
  - 바닥 및 계수
  - 얼마나 많은 피자가 필요합니까

  이 모듈을 완료 후, 학생들은 다음을 할 수 있게 됩니다&#58;
  - Python에서 기본 수학을 합니다.
  - 추가 수학 연산을 위해 수학 모듈을 사용합니다. 
  - 난수를 생성하기 위해 랜덤 모듈을 사용합니다.


  ### 모듈 4&#58; Python 문자열
  Python은 확장된 수학 (및 관련된) 기능을 제공하는 몇 가지 기본-제공 수학 함수와 몇 가지 추가 기본-제공 라이브러리를 포함합니다. 이 레슨에서는, 기본-제공 함수와 수학 및 랜덤 라이브러리를 다룰 것입니다.

  #### 레슨
  - 인용 부호 및 특수 문자
  - 문자열 인덱싱
  - 문자열 슬라이싱
  - 밀착과 반복
  - 일반 문자열 방법
  - 문자열 서식 지정
  - 서식 지정된 문자열 문자 (f-문자열)
  - 기본-제공 문자열 함수


  #### 랩 &#58; 이 레슨의 연습
  - 문자열 인덱싱
  - 문자열 슬라이싱
  - 반복
  - 서식 지정 활용하기
  - f-문자열에 익숙해지기
  - 탭-구분 텍스트 출력하기

  이 모듈을 완료 후, 학생들은 다음을 할 수 있게 됩니다&#58;
  - 문자열로 작업합니다.
  - 특수 문자 탈출
  - 여러-줄 문자열로 작업합니다.
  - 문자열을 인덱스 및 슬라이스합니다.
  - 일반 문자열 연산자와 방법을 사용합니다.
  - 문자열을 서식 지정합니다.
  - 기본-제공 문자열 함수 사용


  ### 모듈 5&#58; 이터러블&#58; 시퀀스, 사전, 및 세트
  이터러블은 멤버를 한 번에 하나씩 반환할 수 있는 개체입니다. 이 레슨에서 다룰 이터러블은 목록, 튜플, 범위, 사전 및 세트입니다. 

  #### 레슨
  - 정의
  - 시퀀스
  - 포장풀기 순서
  - 사전
  - len() 함수
  - 세트
  - *args 및 **kwargs


  #### 랩 &#58; 이 레슨의 연습
  - 무작위 요소 제거 및 반환
  - 간단한 바위, 보, 가위 게임
  - 시퀀스 슬라이싱하기
  - 사용자 입력에서 사전 만들기

  이 모듈을 완료 후, 학생들은 다음을 할 수 있게 됩니다&#58;
  - Python에서 사용 가능한 다양한 유형의 이터러블을 이해합니다. 
  - 목록을 만들고, 수정하고 작업합니다.
  - 활자를 만들고 작업합니다.
  - 범위를 만듭니다.
  - 사전을 만들고, 수정하고 작업합니다
  - 세트를 만들고 세트를 사용하여 목록에서 중복을 제거
  - *args 및 **kwargs 매개 변수를 이해합니다.


  ### 모듈 6&#58; 흐름 제어
  일반적으로, 프로그램은 한 줄씩 순차적으로 진행됩니다. 함수를 호출하여 이 흐름을 변경할 수 있음을 이미 보았습니다. 또한 흐름은 조건문과 루프를 사용하여 변경할 수도 있습니다. 

  #### 레슨
  - 조건문
  - Python의 루프
  - 중단 및 계속
  - enumerate() 함수
  - 발전기
  - 이해 목록


  #### 랩 &#58; 이 레슨의 연습
  - 모두 참 및 하나라도 참
  - 단어 추측 게임
  - 바늘 찾기
  - 주사위 굴리기

  이 모듈을 완료 후, 학생들은 다음을 할 수 있게 됩니다&#58;
  - Python에서 만일 조건으로 작업합니다. 
  - Python에서 루프로 작업합니다. 
  - 생성기 함수 만들기
  - 목록 이해로 작업


  ### 모듈 7&#58; 가상 환경
  가상 환경은 컴퓨터의 Python 개발 플랫폼을 위한 컨테이너입니다. 표준 또는 비-가상 환경과는 별도의 가상 환경에 패키지를 설치할 수 있습니다. 
  #### 레슨
  - 가상 환경


  #### 랩 &#58; 이 레슨의 연습
  - 가상 환경으로 작업하기

  이 모듈을 완료 후, 학생들은 다음을 할 수 있게 됩니다&#58;
  - 가상 환경이 무엇인지 이해합니다.
  - 가상 환경을 만듭니다.
  - 가상 환경을 활성화 및 비활성화합니다.
  - 가상 환경을 삭제합니다.


  ### 모듈 8&#58; 정규 표현
  정규 표현은 Java, PHP, JavaScript, C, C++, 및 Perl을 포함하여, 많은 프로그래밍 언어에서 패턴 매칭을 수행하는 데 사용됩니다. 정규 표현에 대한 간략한 소개를 제공한 다음 Python에서 정규 표현으로 작업하는 방법을 보여줄 것입니다.

  #### 레슨
  - 정규 표현 문법
  - Python의 정규 표현에 대한 처리

  이 모듈을 완료 후, 학생들은 다음을 할 수 있게 됩니다&#58;
  - 패턴 매칭을 위한 정규 표현을 만듭니다.
  - Python 내에서 정규 표현을 사용합니다. 


  ### 모듈 9&#58; 유니코드 및 인코딩
  이 모듈은 유니코드 및 인코딩으로 작업하는 방법을 설명합니다.
  #### 레슨
  - 비트 및 바이트
  - 16진수
  - 인코딩


  #### 랩 &#58; 이 레슨의 연습
  - 숫자 체계 간의 숫자 변환하기
  - 혼동 찾기

  이 모듈을 완료 후, 학생들은 다음을 할 수 있게 됩니다&#58;
  - 2진수와 16진수를 이해합니다.
  - 숫자 체계 간의 숫자를 변환합니다.


  ### 모듈 10&#58; 파일 처리
  Python을 사용하면 운영 시스템의 파일과 디렉터리에 접근하고 수정할 수 있습니다. 

  다른 것들 중에서도, 다음을 할 수 있습니다&#58;
  1. 새 파일 또는 기존 파일을 열고 파일 개체 변수에 저장합니다. 
  2. 한 번에 또는 한 줄씩, 파일 내용을 읽습니다.
  3. 파일 내용에 덧붙입니다.
  4. 파일 내용을 덮어씁니다.
  5. 디렉터리 내용을 나열합니다.
  6. 파일 및 디렉터리의 이름을 변경합니다.

  #### 레슨
  - 파일 열기
  - os 및 os.path 모듈


  #### 랩 &#58; 이 레슨의 연습
  - 파일에서 텍스트 찾기
  - 파일에 쓰기
  - 목록 작성기

  이 모듈을 완료 후, 학생들은 다음을 할 수 있게 됩니다&#58;
  - 운영 시스템에서 파일을 읽습니다.
  - 운영 시스템에서 파일을 만들고 작성합니다.
  - 운영 시스템에서 디렉터리에 접근하고 작업합니다.
  - os 및 os.path 모듈로 작업합니다.


  ### 모듈 11&#58; 예외 처리
  이 모듈은 Python에서 예외를 처리하는 방법을 설명합니다. 
  #### 레슨
  - 절을 제외한 와일드카드 
  - 예외에 대한 정보 얻기 
  - else 절
  - finally 절
  - 흐름 제어를 위한 예외 사용하기
  - 자신만의 예외 제기하기
  - 예외 계층


  #### 랩 &#58; 이 레슨의 연습
  - 예외 제기하기
  - 합계 실행하기

  이 모듈을 완료 후, 학생들은 다음을 할 수 있게 됩니다&#58;
  - Python에서 예외를 처리합니다. 


  ### 모듈 12&#58; Python 날짜 및 시간
  이 모듈은 Python 날짜 및 시간으로 작업하는 방법을 설명합니다.
  #### 레슨
  - 시간 이해하기
  - 시간 모듈
  - 날짜시간 모듈


  #### 랩 &#58; 이 레슨의 연습
  - 암트랙  출발 시간 보고

  이 모듈을 완료 후, 학생들은 다음을 할 수 있게 됩니다&#58;
  - 시간 모듈로 작업합니다.
  - 날짜시간 모듈로 작업합니다.


  ### 모듈 13&#58; 명령 줄에서 Python 스크립트 실행하기
  이 모듈은 명령 줄에서 Python 스크립트를 실행하는 방법을 설명합니다.
  #### 레슨
  - sys.arg
  - sys.path


  #### 랩 &#58; 이 레슨의 연습
  - Windows Easy Transfer를 사용하여 설정 마이그레이션
  - Windows 7의 참조 이미지 구성하기
  - 참조 이미지 구성하기

  이 모듈을 완료 후, 학생들은 다음을 할 수 있게 됩니다&#58;
  - 명령 줄에서 Python 스크립트를 실행합니다.

  #### 추가 자료
  없음
