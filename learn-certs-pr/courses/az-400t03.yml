### YamlMime:Course
title: Implementing Continuous Delivery
metadata:
  title: 'Course AZ-400T03-A: Implementing Continuous Delivery'
  description: 'Course AZ-400T03-A: Implementing Continuous Delivery'
uid: course.az-400t03
courseNumber: 'AZ-400T03-A'
hoursToComplete: 24
iconUrl: /media/learn/certification/course.svg
skillsGained:
- skill: 릴리스와 배포 구분
- skill: 릴리스 파이프라인 구성요소 정의
- skill: 릴리스 전략 설계 시 고려할 사항 설명
- skill: 릴리스 대 릴리스 프로세스 분류 및 그들의 품질을 제어하는 방법 개략 설명
- skill: 릴리스 게이트의 원칙과 릴리스 정보 및 문서 처리 방법 설명
- skill: 전통적인 의미와 현대적 의미 모두에서 배포 패턴 설명
- skill: 릴리스 관리 도구 선택
- skill: Azure DevOps 및 기타 릴리스 관리 툴링에 사용되는 용어 설명
- skill: 빌드 및 릴리스 과제가 무엇인지, 수행할 수 있는 작업 및 사용 가능한 몇 가지 배포 작업에 대해 설명
- skill: 에이전트, 에이전트 큐 및 에이전트 풀 분류
- skill: 하나의 릴리스 파이프라인에서 다중 릴리스 작업이 필요한 이유 설명
- skill: 다중 에이전트 릴리스 작업과 다중 구성 릴리스 작업 구분
- skill: 릴리스 파이프라인에서 릴리스 변수 및 단계 변수 사용
- skill: 서비스 연결을 사용하여 환경에 안전하게 배포
- skill: 파이프라인에 테스트 포함
- skill: 알림, 서비스 후크 및 보고서를 사용하여 파이프라인의 상태를 검사하고 릴리스하는 다양한 방법 나열
- skill: 릴리스 게이트 생성
- skill: 배포 패턴 설명
- skill: 블루 그린 배포 구현
- skill: 카나리아 릴리스 구현
- skill: 프로그레시브 노출 배포 구현
learningPartnersLink: https://www.microsoft.com/learning/partners.aspx
locales:
- en
levels:
- advanced
roles:
- devops-engineer
products:
- azure
- azure-devops
- azure-kubernetes-service
- azure-container-instances
- azure-automation
exams:
- uid: exam.az-400
summary: |-
  본 과정에서는 지속적 업데이트를 구현하기 위한 지식과 기술을 제공합니다. 릴리스 전략을 설계하고, 릴리스 관리 워크플로를 설정하고, 적절한 배포 패턴을 구현하는 방법을 설명합니다.
  #### 대상 그룹 프로필
  본 과정의 수강자는 DevOps 프로세스 구현에 관심이 있거나 Microsoft Azure DevOps 솔루션 인증 시험에 합격한 학생들입니다.
prerequisitesSection: |-
  Azure, 버전 제어, Agile Software Development 및 핵심 소프트웨어 개발 원칙에 대한 기본적인 지식. 소프트웨어를 제공하는 조직에서 경험을 쌓은 것이 도움이 될 것입니다.
outlineSection: |-
  ### 모듈 1&#58; 릴리스 전략 설계
  #### 단원
  - 지속적 업데이트 소개
  - 릴리스 전략 추천
  - 고품질 릴리스 파이프라인 구성
  - 배포 패턴 선택
  - 올바른 릴리스 관리 도구 선택
  #### 랩 &#58; 릴리스 전략 구성
  이 모듈을 완료하면 학생들은 다음을 수행할 수 있습니다&#58;
  - 릴리스와 배포 구분
  - 릴리스 파이프라인 구성요소 정의
  - 릴리스 전략 설계 시 고려할 사항 설명
  - 릴리스 대 릴리스 프로세스 분류 및 그들의 품질을 제어하는 방법 개략 설명
  - 릴리스 게이트의 원칙과 릴리스 정보 및 문서 처리 방법 설명
  - 전통적인 의미와 현대적 의미 모두에서 배포 패턴 설명
  - 릴리스 관리 도구 선택


  ### 모듈 2&#58; 릴리스 관리 워크플로 설정
  #### 단원
  - 릴리스 파이프라인 생성
  - 환경 프로비저닝 및 구성
  - 과제 및 템플릿 관리 및 모듈화
  - 비밀을 출시 파이프라인과 통합
  - 자동화 통합 및 기능 테스트 자동화 구성
  - 상태의 자동 검사


  #### 랩 &#58; Terraform 및 Azure Pipelines으로 클라우드에서 인프라 구축 자동화

  #### 랩 &#58; Azure Key Vault를 사용하여 파이프라인에 암호 설정

  #### 랩 &#58; 부하 테스트 설정 및 실행

  #### 랩 &#58; 기능 테스트 설정 및 실행

  #### 랩 &#58; Azure Monitor를 릴리스 게이트로 사용

  #### 랩 &#58; 릴리스 대시보드 생성
  이 모듈을 완료하면 학생들은 다음을 수행할 수 있습니다&#58;
  - Azure DevOps 및 기타 릴리스 관리 툴링에 사용되는 용어 설명
  - 빌드 및 릴리스 과제가 무엇인지, 수행할 수 있는 작업 및 사용 가능한 몇 가지 배포 작업에 대해 설명
  - 에이전트, 에이전트 큐 및 에이전트 풀 분류
  - 하나의 릴리스 파이프라인에서 다중 릴리스 작업이 필요한 이유 설명
  - 다중 에이전트 릴리스 작업과 다중 구성 릴리스 작업 구분
  - 릴리스 파이프라인에서 릴리스 변수 및 단계 변수 사용
  - 서비스 연결을 사용하여 환경에 안전하게 배포
  - 파이프라인에 테스트 포함
  - 알림, 서비스 후크 및 보고서를 사용하여 파이프라인의 상태를 검사하고 릴리스하는 다양한 방법 나열
  - 릴리스 게이트 생성


  ### 모듈 3&#58; 적절한 배포 패턴 구현
  #### 단원
  - 배포 패턴 소개
  - 블루 그린 배포 구현
  - 기능 토글
  - 카나리아 릴리스
  - Dark Launching
  - AB 테스트
  - 프로그레시브 노출 배포


  #### 랩 &#58; 블루 그린 배포

  #### 랩 &#58; Traffic Manager
  이 모듈을 완료하면 학생들은 다음을 수행할 수 있습니다&#58;
  - 배포 패턴 설명
  - 블루 그린 배포 구현
  - 카나리아 릴리스 구현
  - 프로그레시브 노출 배포 구현

