### YamlMime:Course
title: Querying Microsoft SQL Server® 2014
metadata:
  title: 'Course 20461-D: Querying Microsoft SQL Server® 2014'
  description: 'Course 20461-D: Querying Microsoft SQL Server® 2014'
uid: course.20461
courseNumber: '20461-D'
hoursToComplete: 120
iconUrl: /media/learn/certification/course.svg
skillsGained:
- skill: Microsoft SQL Server 2014 기본 아키텍처 및 개념 설명.
- skill: Transact-SQL와 다른 컴퓨터 언어 간 유사성 및 차이점 이해.
- skill: SELECT 쿼리 작성
- skill: 여러 테이블 쿼리
- skill: 데이터 정렬 및 필터링
- skill: SQL Server내 데이터 형식 사용 설명
- skill: Transact-SQL을 사용한 데이터 수정
- skill: 기본 제공 함수 사용
- skill: 데이터 그룹화 및 집계
- skill: 하위 쿼리 사용
- skill: 테이블 식 사용
- skill: 집합 연산자 사용
- skill: 윈도우 순위 지정, 오프셋 및 집계 함수 사용
- skill: 집합 피벗팅 및 그룹화 구현
- skill: 저장된 프로시저 실행
- skill: T-SQL로 프로그램
- skill: 오류 처리 구현
- skill: 트랜잭션 구현
learningPartnersLink: https://www.microsoft.com/learning/partners.aspx
locales:
- en
levels:
- advanced
roles:
- database-administrator
products:
- sql-server
exams:
- uid: exam.70-461
summary: |-
  이 5일 간의 강사 지도식 과정은 학생들에게 Microsoft SQL Server 2014의 기초 Transact-SQL 작성에 필요한 기술 능력을 제공합니다. 이 과정은 모든 SQL Server 분야인 다시 말해, 데이터베이스 관리, 데이터베이스 개발 및 비즈니스 인텔리전스의 기초입니다. 이 과정의 주요 목적은 사람들이 Exam "70-461&#58; Writing Queries Using Microsoft® SQL Server® 2014 Transact-SQL" 를 준비하는 것입니다. 이 시험은 모든 SQL Server 분야인 다시 말해, 데이터베이스 관리, 데이터베이스 개발 및 비즈니스 인텔리전스의 근본이 되는 시험입니다. 따라서 이 과정의 주요 대상 그룹은&#58; 데이터베이스 관리자, 데이터베이스 개발자 및 BI 전문가입니다.

  참고&#58; 이 과정은 SQL Server 2012 또는 SQL Server 2014 학습에 관심 있는 고객을 대상으로 합니다. SQL Server 2014의 새로운 기능뿐만 아니라 SQL Server 데이터 플랫폼 전반에 걸친 중요한 기능도 다룹니다.

  #### 대상 그룹 프로필
  이 과정은 데이터베이스 관리자, 데이터베이스 개발자 및 비즈니스 인텔리전스 전문가를 대상으로 합니다. 이 과정은 즉 보고서 작성자, 비즈니스 분석가 및 클라이언트 애플리케이션 개발자와 같이 데이터베이스에 중점을 두지는 않거나 시험 응시 계획이 없는 SQL 고급 사용자가 수강할 가능성이 높습니다.
prerequisitesSection: |-
  - 관계형 데이터베이스 실무 지식.
  - Microsoft Windows 운영 체제 및 핵심 기능 기초 지식
outlineSection: |-
  ### 모듈 1&#58; Microsoft SQL Server 2014 소개
  이 모듈에서는 SQL Server 플랫폼 및 주요 도구를 소개합니다. 에디션, 버전, 쿼리에 사용되는 도구, 문서 원본 및 데이터베이스 논리적 구조를 설명합니다.
  #### 단원
  - SQL Server 기본 아키텍처
  - SQL Server 에디션 및 버전
  - SQL Server Management Studio 시작


  #### 랩 &#58; SQL Server 2014 도구 작업
  본 모듈을 마친 후에는 다음을 수행할 수 있습니다&#58;
  - SQL Server 2012의 아키텍처 및 에디션 설명.
  - SQL Server Management Studio 시작.


  ### 모듈 2&#58; T-SQL 쿼리 소개
  이 모듈에서는 SQL Server의 기본 쿼리 언어로 Transact-SQL를 소개합니다. T-SQL 쿼리 기본 구조, SELECT 문의 논리적인 흐름을 설명하고 술어 및 집합 기반 작업과 같은 개념을 소개합니다.
  #### 단원
  - T-SQL 소개
  - 집합 이해
  - 술어 논리 이해
  - SELECT 문의 논리 연산 순서 이해


  #### 랩 &#58; T-SQL 쿼리 소개
  본 모듈을 마친 후에는 다음을 수행할 수 있습니다&#58;
  - T-SQL 요소 및 쿼리 작성 시 역할 설명
  - SQL Server의 집합 사용 설명
  - SQL Server의 술어 논리 사용 설명
  - SELECT 문의 논리 연산 순서 설명


  ### 모듈 3&#58; SELECT 쿼리 작성
  이 모듈에서는 SELECT 문 기초를 소개하고 단일 테이블에 대한 쿼리에 중점을 둡니다.
  #### 단원
  - 간단한 SELECT 문 작성
  - DISTINCT로 중복 제거
  - 칼럼 및 테이블 별칭 사용
  - 간단한 CASE 식 작성


  #### 랩 &#58; 간단한 SELECT 문 작성
  본 모듈을 마친 후에는 다음을 수행할 수 있습니다&#58;
  - 간단한 SELECT 문 작성.
  - DISTINCT 절을 사용한 중복 제거.
  - 칼럼 및 테이블 별칭 사용.
  - 간단한 CASE 식 작성.


  ### 모듈 4&#58; 여러 테이블 쿼리
  이 모듈에서는 SQL Server에서 여러 소스의 데이터를 결합하는 쿼리 작성 방법을 설명합니다. 이 모듈에서는 여러 테이블에서 데이터를 검색하기 위한 방법으로 T-SQL 쿼리에 JOIN 사용을 소개합니다.
  #### 단원
  - JOIN 이해
  - 내부 JOIN 으로 쿼리
  - 외부 JOIN 으로 쿼리
  - 크로스 JOIN 및 셀프 JOIN 으로 쿼리


  #### 랩 &#58; 여러 테이블 쿼리
  본 모듈을 마친 후에는 다음을 수행할 수 있습니다&#58;
  - SELECT 문에 JOIN 을 사용하여 여러 테이블을 쿼리하는 방법 설명.
  - 내부 JOIN 을 사용한 쿼리 작성.
  - 외부 JOIN 을 사용한 쿼리 작성.
  - 셀프 JOIN 및 크로스 JOIN 을 사용한 쿼리 작성.


  ### 모듈 5&#58; 데이터 정렬 및 필터링
  이 모듈에서는 쿼리 향상으로 반환 행 제한, 행이 표시되는 순서 제어 방법을 설명합니다. 이 모듈에서는 누락되었거나 알 수 없는 결과의 해결 방법도 설명합니다.
  #### 단원
  - 데이터 정렬
  - 술어로 데이터 필터링
  - TOP 및 OFFSET-FETCH로 필터링
  - 알 수 없는 값으로 작업


  #### 랩 &#58; 데이터 정렬 및 필터링
  본 모듈을 마친 후에는 다음을 수행할 수 있습니다&#58;
  - WHERE 절에 술어를 사용한 데이터 필터링.
  - ORDER BY를 사용한 데이터 정렬.
  - SELECT 절에 TOP을 사용한 데이터 필터링.
  - OFFSET 및 FETCH로 데이터 필터링.


  ### 모듈 6&#58; SQL Server 2014 데이터 형식 작업
  이 모듈에서는 SQL Server가 데이터를 저장하는 데 사용하는 데이터 형식을 설명합니다. 다양한 형식의 숫자 및 특별히 사용되는 데이터 형식을 소개합니다. 데이터 형식 간 변환 및 형식 우선순위의 중요성도 설명합니다.
  #### 단원
  - SQL Server 2014 데이터 형식 소개
  - 문자 데이터로 작업
  - 데이터 및 날짜 데이터로 작업


  #### 랩 &#58; SQL Server 2014 데이터 형식 작업
  본 모듈을 마친 후에는 다음을 수행할 수 있습니다&#58;
  - 숫자 데이터 형식, 형식 우선순위 및 형식 변환 설명.
  - 문자 데이터 형식을 사용한 쿼리 작성.
  - 날짜 및 시간 데이터 형식을 사용한 쿼리 작성.


  ### 모듈 7&#58; DML을 사용한 데이터 수정
  이 모듈에서는 Transact-SQL 데이터 조작 언어를 사용하여 데이터의 삽입, 업데이트 및 삭제를 수행하는 방법을 설명합니다.
  #### 단원
  - 데이터 삽입
  - 데이터 수정 및 삭제


  #### 랩 &#58; DML을 사용한 데이터 수정
  본 모듈을 마친 후에는 다음을 수행할 수 있습니다&#58;
  - 테이블에 새로운 데이터 삽입.
  - 테이블에 존재하는 기록 업데이트 및 삭제.


  ### 모듈 8&#58; 기본 제공 함수 사용
  이 모듈에서는 SQL Server Denali 내장 함수 사용법을 소개하고 데이터 형식 변환, 논리 결과 및 Null 허용 여부를 위한 테스트를 포함한 일반적인 사용법을 설명합니다.
  #### 단원
  - 내장 함수로 쿼리 작성
  - 변환 함수 사용
  - 논리 함수 사용
  - 함수를 사용하여 NULL 작업


  #### 랩 &#58; 기본 제공 함수 사용
  본 모듈을 마친 후에는 다음을 수행할 수 있습니다&#58;
  - 기본 제공 스칼라 함수로 쿼리 작성.
  - 변환 함수 사용.
  - 논리 함수 사용.
  - 함수를 사용하여 NULL 작업.


  ### 모듈 9&#58; 데이터 그룹화 및 집계
  이 모듈에서는 쿼리 내에서 데이터 그룹화, 그룹화된 데이터 집계 및 HAVING을 사용한 그룹 필터링 방법을 소개합니다. 이 모듈에서는 학생이 SELECT 절에 GROUP BY 절의 칼럼이 포함되는 제한이유와 SELECT 절에 어떤 칼럼이 나열될 수 있는지 이해하도록 도와줍니다.
  #### 단원
  - 집계 함수 사용
  - GROUP BY 절 사용
  - HAVING을 사용한 그룹 필터링


  #### 랩 &#58; 데이터 그룹화 및 집계
  본 모듈을 마친 후에는 다음을 수행할 수 있습니다&#58;
  - 기본 제공 집계 함수를 사용하여 데이터 요약 쿼리 작성.
  - GROUP BY 절을 사용하여 행을 그룹으로 정렬.
  - HAVING 절을 사용하여 검색 조건에 따라 그룹 필터링.


  ### 모듈 10&#58; 하위 쿼리 사용
  이 모듈에서는 SELECT 문의 다양한 부분에서 하위 쿼리를 사용하는 방법을 소개합니다. 스칼라 및 다중 결과 하위 쿼리 사용 및 IN 및 EXISTS 연산자 사용을 포함합니다.
  #### 단원
  - 독립 하위 쿼리 작성
  - 상호 관련된 하위 쿼리 작성
  - EXISTS 술어를 하위 쿼리와 함께 사용


  #### 랩 &#58; 하위 쿼리 사용
  본 모듈을 마친 후에는 다음을 수행할 수 있습니다&#58;
  - 다른 쿼리 내에 중첩된 쿼리 사용 설명.
  - 스칼라 또는 다중 값 결과를 반환하는 독립 하위 쿼리 작성.
  - 스칼라 또는 다중 값 결과를 반환하는 상호 관련된 하위 쿼리 작성.
  - EXISTS 술어를 사용하여 하위 쿼리에 행이 있는지 효율적으로 점검하는데 사용.


  ### 모듈 11&#58; 테이블 식 사용
  이 모듈에서는 일반적으로 쿼리에서 더 사용하기 위해 유효한 관계형 테이블을 반환하는 T-SQL 식을 소개합니다. 이 모듈에서는 뷰, 파생 테이블, 공용 테이블식 및 인라인 테이블 반환 함수를 설명합니다.
  #### 단원
  - 뷰 사용
  - 인라인 테이블 반환 함수 사용
  - 파생 테이블 사용
  - 공용 테이블식 사용


  #### 랩 &#58; 테이블 식 사용
  본 모듈을 마친 후에는 다음을 수행할 수 있습니다&#58;
  - 파생 테이블을 사용하는 쿼리 작성.
  - 공용 테이블 식을 사용하는 쿼리 작성.
  - 이들 대상으로 간단한 뷰 생성 및 쿼리 작성.
  - 이들 대상으로 간단한 인라인 테이블 반환 함수 생성 및 쿼리 작성.


  ### 모듈 12&#58; 집합 연산자 사용
  이 모듈에서는 두 입력 집합 사이의 행 비교를 위해 UNION, INTERSECT 및 EXCEPT 집합 연산자를 소개합니다.
  #### 단원
  - UNION 연산자로 쿼리 작성.
  - EXCEPT와 INTERSECT 사용
  - APPLY 사용


  #### 랩 &#58; 집합 연산자 사용
  본 모듈을 마친 후에는 다음을 수행할 수 있습니다&#58;
  - UNION 연산자를 사용한 데이터 결합 쿼리 작성
  - INTERSECT 및 EXCEPT 연산자를 사용한 집합 비교 쿼리 작성
  - 파생 테이블 또는 함수 결과에 APPLY를 사용하여 테이블의 행을 조작하는 쿼리 작성


  ### 모듈 13&#58; 윈도우 순위 지정, 오프셋 및 집계 함수 사용
  이 모듈에서는 순위 지정, 집계 및 오프셋 함수를 포함한 윈도우 함수를 소개합니다. 이러한 기능은 SQL Server 2012의 새로운 기능입니다. ROW_NUMBER, RANK, DENSE_RANK, NTILE, LAG, LEAD, FIRST_VALUE 및 LAST_VALUE 등 T-SQL 함수를 사용하여 행의 집합 또는 윈도우에 대해 계산을 수행하는 방법을 다룹니다.
  #### 단원
  - OVER로 윈도우 생성
  - 윈도우 함수 살펴보기


  #### 랩 &#58; 윈도우 순위 지정, 오프셋 및 집계 함수 사용
  본 모듈을 마친 후에는 다음을 수행할 수 있습니다&#58;
  - 윈도우 함수 사용 이점 설명.
  - 파티션 및 프레임을 포함하여 OVER 절에 정의된 행으로 윈도우 함수 제한.
  - 행 및 반환 순위 지정, 집계 및 오프셋 비교 결과의 윈도우를 조작하는 윈도우 함수를 사용하는 쿼리 작성.


  ### 모듈 14&#58; 집합 피벗팅 및 그룹화
  이 모듈에서는 T-SQL의 데이터 피벗 기술을 설명하고 GROUPING SETS 절 기초를 소개합니다. SQL Server에서 GROUP BY ROLLUP 및 GROUP BY CUBE 구문 사용도 다룹니다.
  #### 단원
  - PIVOT 및 UNPIVOT으로 쿼리 작성
  - Grouping Sets로 작업


  #### 랩 &#58; 집합 피벗팅 및 그룹화
  본 모듈을 마친 후에는 다음을 수행할 수 있습니다&#58;
  - 결과 집합 피벗 및 피벗 해제 쿼리 작성.
  - Grouping Sets로 다중 그룹화 명시 쿼리 작성.


  ### 모듈 15&#58; 저장 프로시저로 데이터 쿼리
  이 모듈에서는 T-SQL 쿼리 환경에서 기존 저장된 프로시저의 사용 방법을 소개합니다. EXECUTE 사용, 입력 및 출력 매개 변수를 프로시저에 전달하는 방법 및 시스템 저장 프로시저 호출 방법을 설명합니다.
  #### 단원
  - PIVOT 및 UNPIVOT으로 쿼리 작성
  - 저장 프로시저에 매개 변수 전달
  - 간단한 저장된 프로시저 생성
  - 동적 SQL로 작업


  #### 랩 &#58; 저장 프로시저 실행
  본 모듈을 마친 후에는 다음을 수행할 수 있습니다&#58;
  - 저장 프로시저 실행으로 결과 반환.
  - 프로시저에 매개 변수 전달.
  - SELECT 문을 캡슐화하는 간단한 저장된 프로시저 생성.
  - EXEC 및 sp_executesql을 사용한 동적 SQL 구성 및 실행.


  ### 모듈 16&#58; T-SQL로 프로그래밍
  이 모듈에서는 T-SQL 프로그래밍 개념 및 개체에 대해 기본적인 소개를 제공합니다. 배치, 변수, 루프 및 조건과 같은 제어 흐름 요소, 동적 SQL 생성 및 실행 방법 및 동의어 사용 방법을 설명합니다.
  #### 단원
  - T-SQL 프로그래밍 요소
  - 프로그램 흐름 제어


  #### 랩 &#58; T-SQL로 프로그래밍
  본 모듈을 마친 후에는 다음을 수행할 수 있습니다&#58;
  - 간단한 프로그래밍 작업에 사용되는 T-SQL 언어 요소 설명.
  - 배치 및 SQL Server에서 다뤄지는 방법 설명.
  - 변수 및 동의어 선언 및 할당.
  - IF 및 WHILE 블록을 사용하여 프로그램 흐름 제어.


  ### 모듈 17&#58; 오류 처리 구현
  이 모듈에서는 T-SQL 코드에서 오류 처리기 사용을 소개합니다. 컴파일 오류와 런타임 오류의 차이점을 설명하고 오류가 배치에 미치는 영향을 다룹니다. 이 모듈에서는 TRY/CATCH 블록을 사용한 오류 처리 제어 방법, 함수의 ERROR 클래스 사용 및 새 THROW 문 사용 방법도 다룹니다.
  #### 단원
  - TRY / CATCH 블록 사용
  - 오류 정보 작업


  #### 랩 &#58; 오류 처리 구현
  본 모듈을 마친 후에는 다음을 수행할 수 있습니다&#58;
  - T-SQL 코드에 오류 발생 시 SQL Server의 동작 설명.
  - T-SQL의 구조적 예외 처리 구현.
  - 시스템 개체 오류 정보 반환.
  - T-SQL 코드에서 사용자 정의 오류 발생 및 시스템 오류 전달.


  ### 모듈 18&#58; 트랜잭션 구현
  이 모듈에서는 SQL Server의 트랜잭션 관리 개념을 소개합니다. 트랜잭션 속성의 전체적인 개요를 제공하고 BEGIN, COMMIT 및 ROLLBACK으로 트랜잭션을 표시하는 기초를 다룹니다.
  #### 단원
  - 트랜잭션 및 데이터베이스 엔진
  - 트랜잭션 제어


  #### 랩 &#58; 트랜잭션 구현
  본 모듈을 마친 후에는 다음을 수행할 수 있습니다&#58;
  - 트랜잭션 및 배치와 트랜잭션의 차이점 설명.
  - 배치 및 SQL Server에서 다뤄지는 방법 설명.
  - 트랜잭션 제어 언어 문장을 사용한 트랜잭션 생성 및 관리.
  - SET XACT_ABORT을 사용하여 TRY / CATCH 블록 외부에서 SQL Server의 트랜잭션 처리 정의.
  - 트랜잭션 격리 수준 영향 설명.


  ### 모듈 19&#58; 부록 1&#58; 쿼리 성능 향상
  이 모듈에서는 잘 수행되는 쿼리 작성을 위한 몇 가지 주요 지침, 쿼리 실행 모니터링 방법 및 Microsoft SQL Server에 미치는 영향을 제시합니다.
  #### 단원
  - 쿼리 성능의 요소
  - 쿼리 성능 데이터 표시


  #### 랩 &#58; 쿼리 성능 향상
  본 모듈을 마친 후에는 다음을 수행할 수 있습니다&#58;
  - 잘 수행되는 쿼리의 구성 요소 설명.
  - 기본 쿼리 성능 데이터 표시 및 해석


  ### 모듈 20&#58; 부록 2&#58; SQL Server 메타데이터 쿼리
  SQL Server에서는 시스템 카탈로그 뷰, 시스템 함수, 동적 관리 개체 및 시스템 저장 프로시저 등 다양한 메커니즘을 사용하여 구조화된 메타데이터 액세스를 제공합니다. 이 모듈에서는 이러한 메커니즘을 사용하여 시스템 메타데이터를 반환하는 쿼리 작성 방법을 학습합니다.
  #### 단원
  - 시스템 카탈로그 뷰 및 함수 쿼리
  - 시스템 저장 프로시저 실행
  - 동적 관리 개체 쿼리


  #### 랩 &#58; SQL Server 서버 메타데이터 쿼리
  본 모듈을 마친 후에는 다음을 수행할 수 있습니다&#58;
  - 시스템 뷰 및 함수를 사용하여 시스템 메타데이터 검색 쿼리 작성.
  - 시스템 저장 프로시저를 실행하여 시스템 정보 반환.
  - 시스템 동적 관리 뷰 및 함수를 사용하여 시스템 메타데이터 및 상태 정보를 검색하는 쿼리 작성.

