### YamlMime:Course
title: Advanced Python
metadata:
  title: 'Course 55285-A: Advanced Python'
  description: 'Course 55285-A: Advanced Python'
uid: course.55285
courseNumber: '55285-A'
hoursToComplete: 48
iconUrl: /media/learn/certification/course.svg
skillsGained:
- skill: 수집 모듈로 작업합니다.
- skill: 매핑과 필터링 그리고 람다 함수를 이해합니다.
- skill: 고급 정렬을 수행합니다.
- skill: Python에서 정규 표현으로 작업합니다.
- skill: 데이터베이스, CSV 파일, JSON, 및 XML로 작업합니다.
- skill: Python에서 객체-지향 코드를 작성합니다.
- skill: Python 코드를 테스트하고 디버그합니다.
learningPartnersLink: /learn/certifications/partners
locales:
- en
levels:
- advanced
roles:
- developer
summary: |-
  이 Python 교육 과정에서, Python 프로그래밍에 이미 능숙한 학생들은 고급 Python 기술을 배우게 됩니다.
  이  고급 Python 과정은 Python 3을 사용하여 진행됩니다; 그러나, Python 2와 Python 3 사이의 차이점이 있습니다. 개인 Python 수업은, 원하는 경우 강사가 특별히 Python 2에 집중할 수 있습니다.

  #### 구독자 프로필
  없음
prerequisitesSection: |-
  이 Python 수업을 위해서는 다음과 같은 경험이 요구됩니다&#58;
  - 기본 Python 프로그래밍 경험. 특히, 다음에 대해서 매우 잘 알아야 합니다&#58;
      1. 문자열로 작업하기.
      2. 목록, 튜플 및 사전으로 작업하기.
      3. 루프와 조건문.
      4. 자신만의 함수 작성하기.

  다음의 경험은 이 Python 수업에 유용할 것입니다&#58;
  - HTML, XML, JSON, 및 SQL에 대해 조금 알고 있음. 
outlineSection: |-
  ### 모듈 1&#58; 고급 Python 개념
  이 레슨에서는, 일반적으로 사용되지만 이해하려면 Python에 대한 탄탄한 기초가 필요한 몇 가지 Python 기능 및 기술에 대해서 배우게 됩니다.

  #### 레슨
  - 람다 함수
  - 고급 리스트 컴프리헨션
  - 수집 모듈
  - 매핑과 필터링
  - 이변 및 불변 기본-제공 객체
  - 정렬하기
  - 함수 호출에서 시퀀스 풀기


  #### 랩 &#58; 이 레슨의 연습
  - 주사위 다섯개 던지기
  - defaultdict 만들기
  - OrderedDict 만들기
  - 카운터 만들기
  - 데크로 작업하기
  - list.sort()를 sorted(iterable)로 변환하기
  - 문자열을 datetime.date 객체로 변환하기

  이 모듈을 완료 후, 학생들은 다음을 할 수 있게 됩니다&#58;
  - 람다 함수로 작업합니다.
  - 더 고급 리스트 컴프리헨션을 작성합니다.
  - 수집 모듈로 작업하여 명명된 튜블, defaultdicts, ordereddicts, 카운터, 데크를 만듭니다.
  - 매핑과 필터링을 사용합니다.
  - 시퀀스를 정렬합니다.
  - 함수 호출에서 시퀀스를 풉니다. 
  - 모듈과 패키지를 만듭니다.


  ### 모듈 2&#58; 데이터로 작업하기
  데이터는 다양한 장소에서 다양한 방식으로 저장됩니다. 가장 일반적인 모든 방법을 위한 Python 모듈이 있습니다.

  #### 레슨
  - 관계형 데이터베이스
  - CSV
  - 웹에서 데이터 가져오기
  - JSON


  #### 랩 &#58; 이 레슨의 연습
  - SQLite 데이터베이스 쿼리하기
  - 데이터베이스에 파일 데이터 삽입하기
  - CSV 파일에서 데이터 비교하기
  - 요청과 뷰티풀 수프
  - JSON을 이용하여 과정 데이터 인쇄  

  이 모듈을 완료 후, 학생들은 다음을 할 수 있게 됩니다&#58;
  - 관계형 데이터에 저장된 데이터로 액세스하고 작업합니다.
  - CSV 파일에 저장된 데이터로 액세스하고 작업합니다.
  - 웹 페이지에서 데이터를 얻습니다.
  - HTML 및 XML로 저장된 데이터로 액세스하고 작업합니다. 
  - API에 액세스합니다. 
  - JSON로 저장된 데이터로 액세스하고 작업합니다.  


  ### 모듈 3&#58; 테스트 및 디버깅
  이 모듈은 Python을 사용하여 테스트하고 디버그하는 방법을 설명합니다. 
  #### 레슨
  - 성능 테스트하기
  - unittest 모듈


  #### 랩 &#58; 이 레슨의 연습
  - 고정 함수

  이 모듈을 완료 후, 학생들은 다음을 할 수 있게 됩니다&#58;
  - 타이머와 timeit 모듈을 사용하여 성능을 테스트합니다.
  - unittest 모듈을 상요하여 단위 테스트를 작성합니다.


  ### 모듈 4&#58; 클래스와 객체
  객체는 속성 및/또는 행동을 갖는 것으로, 다시 말하면, 특정한 방식이며 특정한 작업을 수행합니다. 현실 세계에서는, 모든 것이 하나의 객체로 간주될 수 있습니다. 일부 객체는 바위, 나무, 테니스 라켓 및 테니스 선수와 같이 유형입니다. 그리고 일부 객체는 단어, 색깔, 테니스 스윙 및 테니스 경기와 같이 무형입니다. 

  #### 레슨
  - 속성
  - 행동
  - 클래스 대. 객체
  - 속성 및 메소드
  - 개인 속성
  - 특성
  - 클래스 문서화하기
  - 상속
  - 스태틱 메소드
  - 클래스 속성 및 메소드
  - 추상 클래스 및 메소드
  - 데코레이터 이해하기


  #### 랩 &#58; 이 레슨의 연습
  - Die에 roll() 메소드를 추가하기
  - 특성
  - 클래스 문서화하기
  - Die 클래스로 확장하기
  - roll() 메소드 확장하기

  이 모듈을 완료 후, 학생들은 다음을 할 수 있게 됩니다&#58;
  - Python에서 클래스 및 객체를 만듭니다. 
  - 인스턴스 메소드, 클래스 메소드 및 스태틱 메소드를 작성합니다.
  - 특성을 정의합니다.
  - 상속을 사용하여 하위 클래스를 만듭니다. 
  - 추상 클래스를 만듭니다.
  - Python 클래스를 적절하게 기록합니다.
  - 데코레이터가 작동하는 방법을 이해합니다.

  #### 추가 자료
  없음

